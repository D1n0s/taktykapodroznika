
************************** MARKER COMPONENTS ! ******************************************


    @forelse($markerData as $mark)
        <div class="secound">
            <div class="card box" id="box_{{$mark['id']}}">
                <h2>LOKALIZACJA </h2>
                <br><br>
                <div class="txt" style="height:80%;width: 100%;">
<form  id="form_{{$mark['id']}}" method="POST" action="{{route('editMarker')}}" onsubmit="saveChanges(event, '{{$mark['id']}}')" >
@csrf
     <div class="group">
                        <input class="input_card " type="text" value="{{$mark['name']}}" required id="name_{{$mark['id']}}" readonly data-original-value="{{$mark['name']}}">
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        <label class="label_read_only label_card">Tytuł</label>
                    </div>
                    <div class="group">
                        <input class="input_card "  type="text" value="{{$mark['desc']}}" required id="desc_{{$mark['id']}}" readonly data-original-value="{{$mark['desc']}}">
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        <label class="label_read_only label_card">Tytuł</label>
                    </div>
                    <div class="group">
                        <input class="input_card "  type="text" value="{{$mark['address']}}" required id="address_{{$mark['id']}}" readonly data-original-value="{{$mark['address']}}">
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        <label class="label_read_only label_card">Tytuł</label>
                    </div>

                    <div class="group editControls">
                        <button type="button" id="edit-button_{{$mark['id']}}" onclick="toggleEditMode('{{$mark['id']}}')">Przełącz Tryb Edycji</button>
                        <button type="submit" id="save-button_{{$mark['id']}}" style="display: none;" onclick="saveChanges('{{$mark['id']}}')">Zapisz</button>
                        <button type="button" id="cancel-button_{{$mark['id']}}" style="display: none;" onclick="cancelEdit('{{$mark['id']}}')">Anuluj</button>
                    </div>
</form>

                </div>
            </div>
        </div>
    @empty























******     KANAŁY NOTATKI ! *********


{{--PRIV--}}

<div style="background-color: white">
    <h3> TO JEST WIADOMOŚĆ PRYWATNA ! </h3>
    <input id="txt_priv" type="text" value="nothing">
    <button class="button-perspective" onclick="sendpriv()">WYŚLIJ PRYWATNIE</button>
    <div id="response_priv" class="p-6 bg-white border-b border-gray-200">
        ----------NOTHING----------
    </div>
</div>
<script>


    window.onload = sendpriv;

        function sendpriv() {
        let messagepriv = document.getElementById('txt_priv')

        axios.post("{{route('trip.event')}}", {
                trip_id: {{$trip->trip_id}},
                message: messagepriv.value
        }, {
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
                'X-CSRF-TOKEN': "{{csrf_token()}}"
            }
        })

    }

    Echo.private('privateTrip.{{$trip->trip_id}}')
        .listen('TripEvent', (e) => {
            document.getElementById('message').innerText = e.message+ " " +  e.mark.name + " " + e.mark.desc;
            document.getElementById('response_priv').innerText = e.message + "NOWA WESJA";
            addMarker(e.mark);
        });


</script>

<br><br><br>

{{--public --}}

<div style="background-color: white">
    <h3> TO JEST WIADOMOŚĆ PUBLICZNA ! </h3>
    <input id="txt_pub" type="text">
    <button class="button-perspective" onclick="sendpub()">WYŚLIJ PRYWATNIE</button>
    <div id="response_pub" class="p-6 bg-white border-b border-gray-200">
        ----------NOTHING----------
    </div>
</div>
<script>
    function sendpub() {
        let messagepub = document.getElementById('txt_pub');

        axios.post("{{route('fire.public.event')}}", {
            color: messagepub.value
        }, {
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
                'X-CSRF-TOKEN': "{{csrf_token()}}"
            }
        })



    }

    Echo.channel('public')
        .listen('PublicEvent', (e) => {
            document.getElementById('response_pub').innerText = e.color;

        });
</script>

{{--<script>--}}
{{--    async function upload() {--}}

{{--        this.loading = true--}}
{{--        await axios.get("{{route('fire.private.event')}}", {--}}
{{--            headers: {--}}
{{--                'Content-Type': 'application/json;charset=utf-8',--}}
{{--                'X-CSRF-TOKEN': "{{csrf_token()}}"--}}
{{--            }--}}
{{--        }).then(res => this.loading = false)--}}
{{--    }--}}
{{--    Echo.private('private.{{auth()->user()->user_id}}')--}}
{{--        .listen('PrivateEvent', (e) => document.getElementById('message').innerText = e.message);--}}
{{--</script>--}}


<br><br><br><br>
<div style="background-color: white;">
    <p id="message">NIC TU NIE MA</p>
    <p>{{auth()->user()->user_id}}</p>
</div>

<script>
    Echo.private('private.')
        .listen('PrivateEvent', (e) => document.getElementById('message').innerText = e.message);
</script>






SZUKANIE PUNKTÓW DZIĘKI NOMINATIM


var suggestInput = document.getElementById('address');
var suggestionsContainer = document.getElementById('suggestions');

suggestInput.addEventListener('input', function() {
    var query = suggestInput.value;

    if (query.length > 2) {
        var url = 'https://nominatim.openstreetmap.org/search?format=json&q=' + query +
            '&addressdetails=1&extratags=1&namedetails=1&json_callback=callback';

        var script = document.createElement('script');
        script.src = url;

        window.callback = function(data) {
            suggestionsContainer.innerHTML = '';

            if (data.length > 0) {
                data.slice(0, 5).forEach(function(result) {
                    var suggestion = document.createElement('div');
                    suggestion.classList.add('suggestion');

                    suggestion.textContent = result.display_name;

                    suggestion.addEventListener('click', function() {
                        var addressParts = [];

                        if (result.address.city) {
                            addressParts.push(result.address.city);
                        }
                        if (result.address.country) {
                            addressParts.push(result.address.country);
                        }
                        if (result.address.village) {
                            addressParts.push(result.address.village);
                        }
                        if (result.address.road && result.address.house_number) {
                            addressParts.push(result.address.road + ' ' + result.address.house_number);
                        } else if (result.address.road) {
                            addressParts.push(result.address.road);
                        }

                        suggestInput.value = addressParts.join(', ');
                        suggestionsContainer.innerHTML = '';
                        // Dodaj kod obsługujący dodawanie punktu do mapy
                    });

                    suggestionsContainer.appendChild(suggestion);
                });
            }
        };

        document.head.appendChild(script);
    } else {
        suggestionsContainer.innerHTML = '';
    }
});


SZUKANIE PUNKTÓW DZIĘKI GEOCODER NOMINATIM  (tutaj dodane jest jeszcze opźnienie i lowercase)



var suggestInput = document.getElementById('address');
var suggestionsContainer = document.getElementById('suggestions');
var geocoder = L.Control.Geocoder.nominatim();

var delay = 400; // Opóźnienie w ms
var timerId = null;

suggestInput.addEventListener('input', function() {
    clearTimeout(timerId);

    timerId = setTimeout(function() {
        var query = suggestInput.value.toLowerCase();

        if (query.length > 2) {
            geocoder.geocode(query, function(results) {
                suggestionsContainer.innerHTML = '';

                if (results.length > 0) {
                    results.forEach(function(result) {
                        var suggestion = document.createElement('div');
                        suggestion.classList.add('suggestion');
                        suggestion.textContent = result.name;

                        suggestion.addEventListener('click', function() {
                            var addressParts = [];

                            if (result.properties && result.properties.address) {
                                var address = result.properties.address;

                                if (address.country) {
                                    addressParts.push(address.country);
                                }
                                if (address.city) {
                                    addressParts.push(address.city);
                                }
                                if (address.town) {
                                    addressParts.push(address.town);
                                }
                                if (address.village) {
                                    addressParts.push(address.village);
                                }
                                if (address.road && address.house_number) {
                                    addressParts.push(address.road + ' ' + address.house_number);
                                } else if (address.road) {
                                    addressParts.push(address.road);
                                }
                            }
                            suggestInput.value = addressParts.join(', ');
                            suggestionsContainer.innerHTML = '';
                        });

                        suggestionsContainer.appendChild(suggestion);
                    });
                }
            });
        } else {
            suggestionsContainer.innerHTML = '';
        } }, delay);
});
